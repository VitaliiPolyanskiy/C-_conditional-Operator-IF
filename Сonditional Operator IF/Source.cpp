#include <iostream>
using namespace std;

int main()
{
	/*
	Синтаксис оператора if:
	if (выражение)
	{
	тело_1;
	}
	else
	{
	тело_2;
	}
	выражение - логическое выражение, результатом которого будет ИСТИНА или ЛОЖЬ.
	тело_1, тело_2 - набор операторов, который будет выполняться.
	Принцип работы: если значение выражения ИСТИНА, то будет выполняться тело_1,
	в противном случае будет выполняться тело_2
	*/

	int nValue;
	cout << "Enter a number: ";
	cin >> nValue;

	cout << "nValue = " << nValue << endl;

	if (nValue > 4)
	{
		cout << "nValue > 4" << endl;
	}
	else
	{
		cout << "nValue <= 4" << endl;
	}

	// ИСТИНА - это любое значение, не равное нулю.

	// Раздел else является необязательным.
	// Если тело состоит из одного оператора, фигурные скобки можно не ставить.

	if (nValue == 0)
		cout << "nValue == 0" << endl;

	// Вложенные операторы.
	// Оператор if может быть вложен в другой оператор if. Максимальный уровень вложенности равен 256. 
	// Однако на практике глубоко вложенные условные операторы используются крайне редко, поскольку 
	// это значительно усложняет логику программы.

	cout << endl << "Enter a number: ";
	cin >> nValue;

	cout << "nValue = " << nValue << endl;

	if (nValue > 0)
	{
		if (nValue < 10)
		{
			cout << "nValue > 0 && nValue < 10" << endl;
		}
		else
		{
			cout << "nValue > 0 && nValue >= 10" << endl;
		}
	}
	else
	{
		cout << "nValue <= 0" << endl;
	}

	// Конструкция if-else-if (if-then-else).
	// Общий вид этой конструкции выглядит так:
	//      if (выражение_1)
	//      {
	//          тело_1;
	//      }
	//      else
	//      {
	//          if (выражение_2)
	//          {
	//              тело_2;
	//          }
	//          else
	//          {
	//              тело_3;
	//          }
	//      }

	// Эти условия выполняются сверху вниз. Как только значение условного выражения становится 
	// истинным, выполняется связанный с ним оператор, и оставшаяся часть конструкции игнорируется. 
	// Если все условные выражения оказались ложными, выполняется оператор, указанный в последнем 
	// разделе else. Если этого раздела нет, то не выполняется ни один оператор.
	// Поскольку по мере увеличения глубины вложенности количество отступов в строке возрастает, 
	// лестницу if-else-if часто записывают иначе:
	//      if (выражение_1)
	//      {
	//          тело_1;
	//      }
	//      else if (выражение_2)
	//      {
	//          тело_2;
	//      }
	//      else
	//      {
	//          тело_3;
	//      }

	cout << endl << "Enter a number: ";
	cin >> nValue;

	cout << "nValue = " << nValue << endl;

	if (nValue > 0)
	{
		cout << "nValue > 0" << endl;
	}
	else if (nValue < 0)
	{
		cout << "nValue < 0" << endl;
	}
	else
	{
		cout << "nValue == 0" << endl;
	}

	return 0;
}